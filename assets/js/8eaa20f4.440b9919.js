"use strict";(globalThis.webpackChunketh_hooks_documentation=globalThis.webpackChunketh_hooks_documentation||[]).push([[4106],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=p(a),c=r,u=k["".concat(d,".").concat(c)]||k[c]||m[c]||l;return a?n.createElement(u,i(i({ref:t},s),{},{components:a})):n.createElement(u,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5523:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={id:"Models",title:"Module: Models",sidebar_label:"Models",sidebar_position:0,custom_edit_url:null},i=void 0,o={unversionedId:"api/modules/Models",id:"api/modules/Models",title:"Module: Models",description:"Types and constants to make it easier to interact with ethers.",source:"@site/docs/api/modules/Models.md",sourceDirName:"api/modules",slug:"/api/modules/Models",permalink:"/eth-hooks/docs/api/modules/Models",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Models",title:"Module: Models",sidebar_label:"Models",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"Hooks",permalink:"/eth-hooks/docs/api/modules/Hooks"},next:{title:"TestUtils",permalink:"/eth-hooks/docs/api/modules/TestUtils"}},d={},p=[{value:"Interfaces",id:"interfaces",level:2},{value:"EthersAppContext",id:"ethersappcontext",level:2},{value:"TCreateEthersModalConnector",id:"tcreateethersmodalconnector",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Summary",id:"summary",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"Models",id:"models",level:2},{value:"TBasicContractData",id:"tbasiccontractdata",level:3},{value:"Summary",id:"summary-1",level:4},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"TBasicContractDataConfig",id:"tbasiccontractdataconfig",level:3},{value:"Summary",id:"summary-2",level:4},{value:"Index signature",id:"index-signature",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"TDeployedHardhatContractsJson",id:"tdeployedhardhatcontractsjson",level:3},{value:"Summary",id:"summary-3",level:4},{value:"Index signature",id:"index-signature-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"TExternalContractsAddressMap",id:"texternalcontractsaddressmap",level:3},{value:"Summary",id:"summary-4",level:4},{value:"Index signature",id:"index-signature-2",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"TContractFunctionInfo",id:"tcontractfunctioninfo",level:3},{value:"Summary",id:"summary-5",level:4},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"TNetworkInfo",id:"tnetworkinfo",level:3},{value:"Summary",id:"summary-6",level:4},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"TEthersProvider",id:"tethersprovider",level:3},{value:"Summary",id:"summary-7",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-1",level:5},{value:"Defined in",id:"defined-in-7",level:4},{value:"TEthersProviderOrSigner",id:"tethersproviderorsigner",level:3},{value:"Summary",id:"summary-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"TEthersSigner",id:"tetherssigner",level:3},{value:"Summary",id:"summary-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"TAbstractProvider",id:"tabstractprovider",level:3},{value:"Summary",id:"summary-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"TypedEventFilter",id:"typedeventfilter",level:3},{value:"Summary",id:"summary-11",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"TypedEvent",id:"typedevent",level:3},{value:"Summary",id:"summary-12",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"DeepPartial",id:"deeppartial",level:3},{value:"Summary",id:"summary-13",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"Misc",id:"misc",level:2},{value:"const_web3DialogClosedByUser",id:"const_web3dialogclosedbyuser",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"const_web3DialogUserRejected",id:"const_web3dialoguserrejected",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"keyNamespace",id:"keynamespace",level:3},{value:"Type declaration",id:"type-declaration-4",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"TContractConnectFunc",id:"tcontractconnectfunc",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Type declaration",id:"type-declaration-5",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-17",level:4},{value:"TContractConnectorBase",id:"tcontractconnectorbase",level:3},{value:"Summary",id:"summary-14",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"TContractConnector",id:"tcontractconnector",level:3},{value:"Summary",id:"summary-15",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-2",level:5},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"TBaseContractExtended",id:"tbasecontractextended",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"TConnectorList",id:"tconnectorlist",level:3},{value:"Summary",id:"summary-16",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-3",level:5},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"TTypedContract",id:"ttypedcontract",level:3},{value:"Summary",id:"summary-17",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-4",level:5},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"TContractsByName",id:"tcontractsbyname",level:3},{value:"Summary",id:"summary-18",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-5",level:5},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"TContractsByChainId",id:"tcontractsbychainid",level:3},{value:"Summary",id:"summary-19",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-6",level:5},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"TAppContractsContext",id:"tappcontractscontext",level:3},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Type declaration",id:"type-declaration-6",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"THardhatContractDataRecord",id:"thardhatcontractdatarecord",level:3},{value:"Summary",id:"summary-20",level:4},{value:"Index signature",id:"index-signature-3",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"TExternalContractDataRecord",id:"texternalcontractdatarecord",level:3},{value:"Summary",id:"summary-21",level:4},{value:"Index signature",id:"index-signature-4",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"const_blockNumberIntervalShort",id:"const_blocknumberintervalshort",level:3},{value:"Summary",id:"summary-22",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"const_blockNumberIntervalMedium",id:"const_blocknumberintervalmedium",level:3},{value:"Summary",id:"summary-23",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"const_blockNumberIntervalLong",id:"const_blocknumberintervallong",level:3},{value:"Summary",id:"summary-24",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"TQueryOptions",id:"tqueryoptions",level:3},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"TUpdateOptions",id:"tupdateoptions",level:3},{value:"Summary",id:"summary-25",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-7",level:5},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Type declaration",id:"type-declaration-7",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"TOverride",id:"toverride",level:3},{value:"Summary",id:"summary-26",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-8",level:5},{value:"Type declaration",id:"type-declaration-8",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"defaultOverride",id:"defaultoverride",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"defaultUpdateOptions",id:"defaultupdateoptions",level:3},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"THookResult",id:"thookresult",level:3},{value:"Summary",id:"summary-27",level:4},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"Type Definition",id:"type-definition",level:2},{value:"TEthersAdaptor",id:"tethersadaptor",level:3},{value:"Summary",id:"summary-28",level:4},{value:"Type declaration",id:"type-declaration-9",level:4},{value:"Defined in",id:"defined-in-37",level:4}],s={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Types and constants to make it easier to interact with ethers."),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/interfaces/Models.IEthersContext"},"IEthersContext"))),(0,r.kt)("h2",{id:"ethersappcontext"},"EthersAppContext"),(0,r.kt)("h3",{id:"tcreateethersmodalconnector"},"TCreateEthersModalConnector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TCreateEthersModalConnector"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"id?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),") => ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/EthersAppContext#tethersmodalconnector"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersModalConnector"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"id?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/EthersAppContext#tethersmodalconnector"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersModalConnector"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("h4",{id:"summary"},"Summary"),(0,r.kt)("p",null,"A callback type that returns a EthersModalConnector"),(0,r.kt)("h5",{id:"\ufe0f-notes"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"can be used by components that need to give a connector to ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/interfaces/Models.IEthersContext#openmodal"},"IEthersContext.openModal")),(0,r.kt)("li",{parentName:"ul"},"id is the identifier of the provider:  ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Web3Modal/web3modal#connect-to-specific-provider"},"See docs"))),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"id?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/EthersAppContext#tethersmodalconnector"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersModalConnector"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/ethersAppContextTypes.ts#L17"},"models/ethersAppContextTypes.ts:17")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"models"},"Models"),(0,r.kt)("h3",{id:"tbasiccontractdata"},"TBasicContractData"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TBasicContractData"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-1"},"Summary"),(0,r.kt)("p",null,"Describes the sctructure of each contract in hardhat_contracts.json"),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"abi?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L7"},"models/contractTypes.ts:7")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tbasiccontractdataconfig"},"TBasicContractDataConfig"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TBasicContractDataConfig"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-2"},"Summary"),(0,r.kt)("p",null,"Describes a basic contract data record, the chainId and address"),(0,r.kt)("h4",{id:"index-signature"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[chainId: ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"]",": { ",(0,r.kt)("inlineCode",{parentName:"p"},"chainId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"  }"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L18"},"models/contractTypes.ts:18")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tdeployedhardhatcontractsjson"},"TDeployedHardhatContractsJson"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TDeployedHardhatContractsJson"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-3"},"Summary"),(0,r.kt)("p",null,"Describes the structure of hardhat_contracts.json"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{chainIds: { networkNames: {contracts} }}, contains an record of contracts"),(0,r.kt)("li",{parentName:"ul"},"Used by ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Hooks#usecontractloader"},"useContractLoader"))),(0,r.kt)("h4",{id:"index-signature-1"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[chainId: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": { ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"chainId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"contracts"),": { ",(0,r.kt)("inlineCode",{parentName:"p"},"[contractName: string]"),": { ",(0,r.kt)("inlineCode",{parentName:"p"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),"[]  };  }  }[]"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L58"},"models/contractTypes.ts:58")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"texternalcontractsaddressmap"},"TExternalContractsAddressMap"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TExternalContractsAddressMap"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"{chainId: {contract: address}}, contains an record of contracts"),(0,r.kt)("h4",{id:"summary-4"},"Summary"),(0,r.kt)("p",null,"A type for external contracts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is a record of contract names and their deployed address"),(0,r.kt)("li",{parentName:"ul"},"this data type is used by {@link ContractsAppContext} to connect to external contracts")),(0,r.kt)("h4",{id:"index-signature-2"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[chainId: ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"]",": { ",(0,r.kt)("inlineCode",{parentName:"p"},"[contractName: string]"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),";  }"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L80"},"models/contractTypes.ts:80")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractfunctioninfo"},"TContractFunctionInfo"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractFunctionInfo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-5"},"Summary"),(0,r.kt)("p",null,"Contract function information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"contractName"),(0,r.kt)("li",{parentName:"ul"},"functionname"),(0,r.kt)("li",{parentName:"ul"},"functionArgs: functionArguments, an array")),(0,r.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"functionName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"functionArgs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L95"},"models/contractTypes.ts:95")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tnetworkinfo"},"TNetworkInfo"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TNetworkInfo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-6"},"Summary"),(0,r.kt)("p",null,"A type that describes the basics of a network for applications. e.g. mainnet, ropsten, rinkeby, etc."),(0,r.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"color")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"chainId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"url")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"faucet?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"blockExplorer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"price?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gasPrice?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/networkTypes.ts#L7"},"models/networkTypes.ts:7")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tethersprovider"},"TEthersProvider"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TEthersProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonRpcProvider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Web3Provider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"StaticJsonRpcProvider")),(0,r.kt)("h4",{id:"summary-7"},"Summary"),(0,r.kt)("p",null,"A union of various ethers providers for ease of use and maximum flexiblity"),(0,r.kt)("h5",{id:"\ufe0f-notes-1"},"\u270f\ufe0f Notes"),(0,r.kt)("p",null,"Used by eth-hooks, eth-components and scaffold-eth-typescript"),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L19"},"models/providerTypes.ts:19")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tethersproviderorsigner"},"TEthersProviderOrSigner"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TEthersProviderOrSigner"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonRpcProvider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Web3Provider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"StaticJsonRpcProvider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonRpcSigner")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Wallet")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"VoidSigner")),(0,r.kt)("h4",{id:"summary-8"},"Summary"),(0,r.kt)("p",null,"A union of various providers and signers in ethers to give maximum flexibility"),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L27"},"models/providerTypes.ts:27")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tetherssigner"},"TEthersSigner"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TEthersSigner"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonRpcSigner")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Wallet")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"VoidSigner")),(0,r.kt)("h4",{id:"summary-9"},"Summary"),(0,r.kt)("p",null,"A union of various providers in ethers to give maximum flexibility"),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L42"},"models/providerTypes.ts:42")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tabstractprovider"},"TAbstractProvider"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TAbstractProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("h4",{id:"summary-10"},"Summary"),(0,r.kt)("p",null,"A union of abstract, non initalizable providers, used by some functions"),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L50"},"models/providerTypes.ts:50")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"typedeventfilter"},"TypedEventFilter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TypedEventFilter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"_EventArgsArray"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_EventArgsObject"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"EventFilter")),(0,r.kt)("h4",{id:"summary-11"},"Summary"),(0,r.kt)("p",null,"An generic extension of EventFilter that is used by TypedEvent.  It allows for typed events to be returned"),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_EventArgsArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_EventArgsObject")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L58"},"models/providerTypes.ts:58")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"typedevent"},"TypedEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TypedEvent"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"EventArgs"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Event")," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"EventArgs"),"  }"),(0,r.kt)("h4",{id:"summary-12"},"Summary"),(0,r.kt)("p",null,"An generic extension of Event.  It types the the arguments and return values of the contract event to be used in typescript."),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"EventArgs")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Result"))))),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/providerTypes.ts#L69"},"models/providerTypes.ts:69")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"deeppartial"},"DeepPartial"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DeepPartial"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": { ","[P in keyof T]","?: DeepPartial<T","[P]",">"," }"),(0,r.kt)("h4",{id:"summary-13"},"Summary"),(0,r.kt)("p",null,"Similar to ",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"},"partial")," int typescript but allows deep partial types."),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/utilityTypes.ts#L7"},"models/utilityTypes.ts:7")),(0,r.kt)("h2",{id:"misc"},"Misc"),(0,r.kt)("h3",{id:"const_web3dialogclosedbyuser"},"const","_","web3DialogClosedByUser"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"const","_","web3DialogClosedByUser"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"Modal closed by user"')),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/constants/common.ts#L1"},"models/constants/common.ts:1")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"const_web3dialoguserrejected"},"const","_","web3DialogUserRejected"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"const","_","web3DialogUserRejected"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"Error: User Rejected"')),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/constants/common.ts#L2"},"models/constants/common.ts:2")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"keynamespace"},"keyNamespace"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"keyNamespace"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"type-declaration-4"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"network")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"network"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"signer"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"contracts"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"state")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"state"'))))),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/constants/keyNamespace.ts#L1"},"models/constants/keyNamespace.ts:1")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractconnectfunc"},"TContractConnectFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractConnectFunc"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContract"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"signerOrProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"GContract")),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"))))),(0,r.kt)("h4",{id:"type-declaration-5"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"address"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"signerOrProvider"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"GContract")),(0,r.kt)("p",null,"A function that connects to a contract.  Used by ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectorbase"},"TContractConnectorBase"),".  This is usually something generated by typechain and is used to connect to contract on the blockchain."),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signerOrProvider")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"Provider"))))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GContract")),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L9"},"models/contractAppContextTypes.ts:9")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractconnectorbase"},"TContractConnectorBase"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractConnectorBase"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContract"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]",">","  }",">"),(0,r.kt)("h4",{id:"summary-14"},"Summary"),(0,r.kt)("p",null,"This types describes a base for a connnector.  A contract connector would be a a conception that is the minimum required to connect to a contract.  It has a connector function that returns a typed contract and abi that has contract information."),(0,r.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"))))),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L18"},"models/contractAppContextTypes.ts:18")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractconnector"},"TContractConnector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractConnector"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContract"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectorbase"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectorBase")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContract"),">",">"),(0,r.kt)("h4",{id:"summary-15"},"Summary"),(0,r.kt)("p",null,"This type descripts a connector that has enough information to create a contract in a chain.  The contractName is required to use a group of connectors to create a connection of available contracts for the app."),(0,r.kt)("h5",{id:"\ufe0f-notes-2"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The config would be a record of chain information that helps the factory create contracts for the app."),(0,r.kt)("li",{parentName:"ul"},"based on ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectorbase"},"TContractConnectorBase")," and uses ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},"TBasicContractDataConfig"))),(0,r.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"))))),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L31"},"models/contractAppContextTypes.ts:31")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tbasecontractextended"},"TBaseContractExtended"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TBaseContractExtended"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseContract")," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),"  }"),(0,r.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L42"},"models/contractAppContextTypes.ts:42")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tconnectorlist"},"TConnectorList"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TConnectorList"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContracts"),">",": { ","[contractName in GContractNames]",": TContractConnector<GContractNames, GContracts",">"," }"),(0,r.kt)("h4",{id:"summary-16"},"Summary"),(0,r.kt)("p",null,"A Record of typed connectors that can be used to create a contract."),(0,r.kt)("h5",{id:"\ufe0f-notes-3"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"used by ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tappcontractscontext"},"TAppContractsContext"))),(0,r.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),">")))),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L51"},"models/contractAppContextTypes.ts:51")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ttypedcontract"},"TTypedContract"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TTypedContract"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GAppContractConnectorList"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"GAppContractConnectorList")," extends { ","[key in GContractNames]",": Object } ? ",(0,r.kt)("inlineCode",{parentName:"p"},"TypedContract")," : ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),">"),(0,r.kt)("h4",{id:"summary-17"},"Summary"),(0,r.kt)("p",null,"A type that infers contract type ",(0,r.kt)("inlineCode",{parentName:"p"},"(extended from BaseContract)")," based on connectors and contractName.  For example ",(0,r.kt)("inlineCode",{parentName:"p"},"DAI")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"{ DAI: { connect: ... } }"),".  If the contractName is not found, it will return a BaseContract"),(0,r.kt)("h5",{id:"\ufe0f-notes-4"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"used by {@link contractContextFactory}")),(0,r.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GAppContractConnectorList")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GAppContractConnectorList"))))),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L62"},"models/contractAppContextTypes.ts:62")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractsbyname"},"TContractsByName"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractsByName"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContracts"),">",": { ","[contractName in GContractNames]",": { ","[chainId in number]",": GContracts ","|"," undefined } }"),(0,r.kt)("h4",{id:"summary-18"},"Summary"),(0,r.kt)("p",null,"A utility type for typed contracts by name and then by chain"),(0,r.kt)("h5",{id:"\ufe0f-notes-5"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"used by ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tappcontractscontext"},"TAppContractsContext"))),(0,r.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),">")))),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L78"},"models/contractAppContextTypes.ts:78")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractsbychainid"},"TContractsByChainId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractsByChainId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContracts"),">",": { ","[chainId in number]",": { ","[contractName in GContractNames]",": GContracts ","|"," undefined } }"),(0,r.kt)("h4",{id:"summary-19"},"Summary"),(0,r.kt)("p",null,"A utility type for typed contracts by chain and then by name"),(0,r.kt)("h5",{id:"\ufe0f-notes-6"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"used by ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tappcontractscontext"},"TAppContractsContext"))),(0,r.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),">")))),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L90"},"models/contractAppContextTypes.ts:90")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tappcontractscontext"},"TAppContractsContext"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TAppContractsContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContracts"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Describes the current ContractsContext for the app used by the context created by {@link contractContextFactory}"),(0,r.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),">")))),(0,r.kt)("h4",{id:"type-declaration-6"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractConnectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tconnectorlist"},(0,r.kt)("inlineCode",{parentName:"a"},"TConnectorList")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GContracts"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractsByName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tcontractsbyname"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractsByName")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GContracts"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractsByChainId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tcontractsbychainid"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractsByChainId")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GContracts"),">")))),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractAppContextTypes.ts#L102"},"models/contractAppContextTypes.ts:102")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"thardhatcontractdatarecord"},"THardhatContractDataRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"THardhatContractDataRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-20"},"Summary"),(0,r.kt)("p",null,"Contracts by contract name"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A record of contract names and their hardhat contract json"),(0,r.kt)("li",{parentName:"ul"},"includes chain id")),(0,r.kt)("h4",{id:"index-signature-3"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[contractName: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": { ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig"))," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),"[]  }"),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L31"},"models/contractTypes.ts:31")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"texternalcontractdatarecord"},"TExternalContractDataRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TExternalContractDataRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-21"},"Summary"),(0,r.kt)("p",null,"Contracts by contract name"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A record of contract names and their hardhat contract json"),(0,r.kt)("li",{parentName:"ul"},"includes chain id")),(0,r.kt)("h4",{id:"index-signature-4"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[contractName: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": { ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  }"),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/contractTypes.ts#L44"},"models/contractTypes.ts:44")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"const_blocknumberintervalshort"},"const","_","blockNumberIntervalShort"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"const","_","blockNumberIntervalShort"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#deeppartial"},(0,r.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tupdateoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TUpdateOptions")),">"),(0,r.kt)("h4",{id:"summary-22"},"Summary"),(0,r.kt)("p",null,"An constant for block number interval of 10 blocks"),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L11"},"models/hookTypes.ts:11")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"const_blocknumberintervalmedium"},"const","_","blockNumberIntervalMedium"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"const","_","blockNumberIntervalMedium"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#deeppartial"},(0,r.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tupdateoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TUpdateOptions")),">"),(0,r.kt)("h4",{id:"summary-23"},"Summary"),(0,r.kt)("p",null,"An constant for block number interval of 50 blocks"),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L17"},"models/hookTypes.ts:17")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"const_blocknumberintervallong"},"const","_","blockNumberIntervalLong"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"const","_","blockNumberIntervalLong"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#deeppartial"},(0,r.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tupdateoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TUpdateOptions")),">"),(0,r.kt)("h4",{id:"summary-24"},"Summary"),(0,r.kt)("p",null,"An constant for block number interval of 250 blocks"),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L23"},"models/hookTypes.ts:23")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tqueryoptions"},"TQueryOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TQueryOptions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"QueryObserverOptions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},'"refetchInterval"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"notifyOnChangeProps"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"notifyOnChangePropsExclusions"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"useErrorBoundary"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"refetchOnWindowFocus"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"refetchOnMount"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"refetchOnReconnect"'),">"," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"refetchOnWindowFocus?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"always"')," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"refetchOnMount?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"always"')," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"refetchOnReconnect?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"always"'),"  }"),(0,r.kt)("h4",{id:"type-parameters-12"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GResult"))))),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L25"},"models/hookTypes.ts:25")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tupdateoptions"},"TUpdateOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TUpdateOptions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-25"},"Summary"),(0,r.kt)("p",null,"Options for hooks that describe the behviour of updates.\nBy default, depending on the hook, it will update every block."),(0,r.kt)("h5",{id:"\ufe0f-notes-7"},"\u270f\ufe0f Notes"),(0,r.kt)("p",null,"The following options are available:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"interval: interval in blocknumber to update in (default 1) see {@link TUpdateOptions.blockNumberInterval}"),(0,r.kt)("li",{parentName:"ul"},"polling: in ms, should be over 10000ms.  This is set by {@link TUpdateOptions.query.refetchInterval}")),(0,r.kt)("h4",{id:"type-parameters-13"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GResult")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"type-declaration-7"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"blockNumberInterval")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interval in blocknumber for the hook to update in (default 1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"refetchInterval?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"query?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tqueryoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TQueryOptions")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GResult"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L50"},"models/hookTypes.ts:50")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"toverride"},"TOverride"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TOverride"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-26"},"Summary"),(0,r.kt)("p",null,"Ethers Provider options.  By default, the context provider is used by the hook.  If you want to use a different provider, you can:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"pass in an ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},"TEthersAdaptor")," to override the provider"),(0,r.kt)("li",{parentName:"ul"},"give the alternateContextKey for a secondary context provider.")),(0,r.kt)("h5",{id:"\ufe0f-notes-8"},"\u270f\ufe0f Notes"),(0,r.kt)("p",null,"Adaptor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To create a adaptor from a provider/signer see {@link useGetEthersAdaptorFromSignerOrProvider}"),(0,r.kt)("li",{parentName:"ul"},"You need to set adaptorEnabled to true")),(0,r.kt)("p",null,"Alternate Context Key"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For more info on alternateContextKey, see ",(0,r.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/modules/EthersAppContext#tethersappcontextprops"},"TEthersAppContextProps")," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NoahZinsmeister/web3-react/tree/v6/docs#createweb3reactroot"},"web3-react docs"),".")),(0,r.kt)("h4",{id:"type-declaration-8"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"adaptorEnabled")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An enable override adaptor (ethers provider) for this hook")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"adaptor")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersAdaptor"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The alternate adaptor to use.  See ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},"TEthersAdaptor"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"alternateContextKey?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The alternate context key to use.  See ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/EthersAppContext#tethersappcontextprops"},"TEthersAppContextProps"))))),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L73"},"models/hookTypes.ts:73")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"defaultoverride"},"defaultOverride"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"defaultOverride"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#toverride"},(0,r.kt)("inlineCode",{parentName:"a"},"TOverride"))),(0,r.kt)("p",null,"An helper to create the default override settings for hooks"),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#toverride"},(0,r.kt)("inlineCode",{parentName:"a"},"TOverride"))),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L93"},"models/hookTypes.ts:93")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"defaultupdateoptions"},"defaultUpdateOptions"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"defaultUpdateOptions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),">","(): ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tupdateoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TUpdateOptions")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),">"),(0,r.kt)("p",null,"A helper to create default update options for hooks"),(0,r.kt)("h4",{id:"type-parameters-14"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GResult")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tupdateoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"TUpdateOptions")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GResult"),">"),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L105"},"models/hookTypes.ts:105")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"thookresult"},"THookResult"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"THookResult"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ","[result: T, update: Function, status: QueryStatus]"),(0,r.kt)("h4",{id:"summary-27"},"Summary"),(0,r.kt)("p",null,"This type describes the tuple that is returned by most hooks"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"result: the result of the hook"),(0,r.kt)("li",{parentName:"ol"},"update: a callback will refresh the results of hook manually"),(0,r.kt)("li",{parentName:"ol"},"status: the status of the query.  From react-query: 'idle' | 'loading' | 'error' | 'success'. You can use this for UX purposes, see {@link QueryStatus}.")),(0,r.kt)("h4",{id:"type-parameters-15"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/hookTypes.ts#L124"},"models/hookTypes.ts:124")),(0,r.kt)("h2",{id:"type-definition"},"Type Definition"),(0,r.kt)("h3",{id:"tethersadaptor"},"TEthersAdaptor"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TEthersAdaptor"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-28"},"Summary"),(0,r.kt)("p",null,"Essentially a object that allows interaction with the network:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"provider signer,")),(0,r.kt)("h4",{id:"type-declaration-9"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tetherssigner"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersSigner")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"provider?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersprovider"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersProvider")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"chainId?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"account?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/models/ethersAppContextTypes.ts#L52"},"models/ethersAppContextTypes.ts:52")))}m.isMDXComponent=!0}}]);