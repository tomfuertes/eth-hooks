"use strict";(globalThis.webpackChunketh_hooks_documentation=globalThis.webpackChunketh_hooks_documentation||[]).push([[6734],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},i=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(h,c(c({ref:t},i),{},{components:n})):r.createElement(h,c({ref:t},i))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},c="useBalance",l={unversionedId:"main/hooks/useBalance",id:"main/hooks/useBalance",title:"useBalance",description:"Get account balance information from the Ethereum blockchain.",source:"@site/docs/main/hooks/useBalance.mdx",sourceDirName:"main/hooks",slug:"/main/hooks/useBalance",permalink:"/eth-hooks/docs/main/hooks/useBalance",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/main/hooks/useBalance.mdx",tags:[],version:"current",frontMatter:{},sidebar:"overview",previous:{title:"\ud83d\udd87 Overview",permalink:"/eth-hooks/docs/overview"},next:{title:"useBlockNumber",permalink:"/eth-hooks/docs/main/hooks/useBlockNumber"}},u={},s=[{value:"How to import",id:"how-to-import",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"To learn more",id:"to-learn-more",level:2}],i={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usebalance"},"useBalance"),(0,a.kt)("p",null,"Get account balance information from the Ethereum blockchain."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Returns the current balance.")),(0,a.kt)("h2",{id:"how-to-import"},"How to import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useBalance } from 'eth-hooks';\n")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("p",null,"To get started:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const [yourLocalBalance] = useBalance(ethersContext.account);\n")),(0,a.kt)("p",null,"To get your balance on different changes, just plug in a different provider:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const [mainnetAdaptor] = useEthersAdaptorFromProviderOrSigners(exampleMainnetProvider);\nconst [yourMainnetBalance, yUpdate, yStatus] = useBalance(ethersContext.account, mergeDefaultUpdateOptions(), {\n  adaptorEnabled: true,\n  adaptor: mainnetAdaptor,\n});\n")),(0,a.kt)("p",null,"You can change the update schedule to every 10 blocks, the default is every 1 block:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const [secondbalance] = useBalance(ethersContext.account, { blockNumberInterval: 10 });\n")),(0,a.kt)("p",null,"Or change the update schedule to every polling, min is 10000ms:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const [thirdbalance] = useBalance(ethersContext.account, { refetchInterval: 100000, blockNumberInterval: undefined });\n")),(0,a.kt)("p",null,"You can also use advanced react-query update options, like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const [fourthbalance] = useBalance(ethersContext.account, {\n  blockNumberInterval: 1,\n  query: { refetchOnWindowFocus: true },\n});\n")),(0,a.kt)("h2",{id:"to-learn-more"},"To learn more"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../../api/modules/Hooks#usebalance"},"Go here for this hooks full API documentation"),"."))}p.isMDXComponent=!0}}]);