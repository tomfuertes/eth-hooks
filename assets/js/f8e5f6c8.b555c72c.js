"use strict";(globalThis.webpackChunketh_hooks_documentation=globalThis.webpackChunketh_hooks_documentation||[]).push([[7576],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),d=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=d(t.components);return n.createElement(l.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),s=d(a),k=r,N=s["".concat(l,".").concat(k)]||s[k]||m[k]||o;return a?n.createElement(N,i(i({ref:e},c),{},{components:a})):n.createElement(N,i({ref:e},c))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=s;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5266:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const o={id:"ContractAppContext",title:"Module: ContractAppContext",sidebar_label:"ContractAppContext",sidebar_position:0,custom_edit_url:null},i=void 0,p={unversionedId:"api/modules/ContractAppContext",id:"api/modules/ContractAppContext",title:"Module: ContractAppContext",description:"A context for your react app with contractsContextFactory that provides you access to load, connect and use typed contracts throught your app.",source:"@site/docs/api/modules/ContractAppContext.md",sourceDirName:"api/modules",slug:"/api/modules/ContractAppContext",permalink:"/eth-hooks/docs/api/modules/ContractAppContext",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"ContractAppContext",title:"Module: ContractAppContext",sidebar_label:"ContractAppContext",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"Table of contents",permalink:"/eth-hooks/docs/api/"},next:{title:"EthersAppContext",permalink:"/eth-hooks/docs/api/modules/EthersAppContext"}},l={},d=[{value:"ContractAppContext",id:"contractappcontext",level:2},{value:"createConnectorForHardhatContract",id:"createconnectorforhardhatcontract",level:3},{value:"Summary",id:"summary",level:5},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"createConnectorForExternalContract",id:"createconnectorforexternalcontract",level:3},{value:"Summary",id:"summary-1",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes",level:5},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"createConnectorForExternalAbi",id:"createconnectorforexternalabi",level:3},{value:"Summary",id:"summary-2",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-1",level:5},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"TContractsContextProps",id:"tcontractscontextprops",level:3},{value:"Summary",id:"summary-3",level:4},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"contractsContextFactory",id:"contractscontextfactory",level:3},{value:"Summary",id:"summary-4",level:4},{value:"\u270f\ufe0f Notes",id:"\ufe0f-notes-2",level:5},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"Misc",id:"misc",level:2},{value:"TContractsContextActions",id:"tcontractscontextactions",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-5",level:4}],c={toc:d};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A context for your react app with ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/ContractAppContext#contractscontextfactory"},"contractsContextFactory")," that provides you access to load, connect and use typed contracts throught your app."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"../../main/context/ContractAppContext"},"the ContractAppContext docs")," for detailed explanation and examples."),(0,r.kt)("h2",{id:"contractappcontext"},"ContractAppContext"),(0,r.kt)("h3",{id:"createconnectorforhardhatcontract"},"createConnectorForHardhatContract"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createConnectorForHardhatContract"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"typechainFactory"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deployedHardhatContractJson"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h5",{id:"summary"},"Summary"),(0,r.kt)("p",null,"Creates a connector for any of your hardhat contracts"),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">")))),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"typechainFactory")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"td"},"connect"),": ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">","[]  }",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deployedHardhatContractJson")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tdeployedhardhatcontractsjson"},(0,r.kt)("inlineCode",{parentName:"a"},"TDeployedHardhatContractsJson")))))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractConnectors.ts#L76"},"context/contracts-app/contractConnectors.ts:76")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createconnectorforexternalcontract"},"createConnectorForExternalContract"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createConnectorForExternalContract"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"typechainFactory"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deployedContractJson"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h4",{id:"summary-1"},"Summary"),(0,r.kt)("p",null,"Creates a contract connector for any external contract"),(0,r.kt)("h5",{id:"\ufe0f-notes"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"As an example you could use this for an external contract such as DAI")),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">")))),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"typechainFactory")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"td"},"connect"),": ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">","[]  }",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deployedContractJson")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#texternalcontractsaddressmap"},(0,r.kt)("inlineCode",{parentName:"a"},"TExternalContractsAddressMap")))))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractConnectors.ts#L113"},"context/contracts-app/contractConnectors.ts:113")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createconnectorforexternalabi"},"createConnectorForExternalAbi"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createConnectorForExternalAbi"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"connectFunc?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h4",{id:"summary-2"},"Summary"),(0,r.kt)("p",null,"Create a contract connector from a ABI."),(0,r.kt)("h5",{id:"\ufe0f-notes-1"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This can be used for unverified external contracts")),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">"," = ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"))))),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"abi")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"connectFunc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GBaseContract"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tbasiccontractdataconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"TBasicContractDataConfig")),"  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),": ",(0,r.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tcontractconnectfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractConnectFunc")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GBaseContract"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"abi"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">","[]  }",">",">"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractConnectors.ts#L151"},"context/contracts-app/contractConnectors.ts:151")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcontractscontextprops"},"TContractsContextProps"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractsContextProps"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-3"},"Summary"),(0,r.kt)("p",null,"Props for the ContractContext generated by the contractContextFactory"),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ethersContextKey?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractsContextFactory.tsx#L40"},"context/contracts-app/contractsContextFactory.tsx:40")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contractscontextfactory"},"contractsContextFactory"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"contractsContextFactory"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GAppConnectorList"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GContractsTypes"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"loadAppContractConnectors"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"summary-4"},"Summary"),(0,r.kt)("p",null,"This is the factory function that creates the ContractContext and returns the hooks you can use to access typed contracts through out your app."),(0,r.kt)("h5",{id:"\ufe0f-notes-2"},"\u270f\ufe0f Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/release/packages/vite-app-ts/src/config/appContracts.config.ts"},"this for an example")," for an example of how to use this.")),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A type that represents the names of the contracts you want to access.  Should be ",(0,r.kt)("inlineCode",{parentName:"td"},"keyof ReturnType<loadAppContractConnectors>"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"loadAppContractConnectors")," is the function that returns the contract connectors config.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tconnectorlist"},(0,r.kt)("inlineCode",{parentName:"a"},"TConnectorList")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tbasecontractextended"},(0,r.kt)("inlineCode",{parentName:"a"},"TBaseContractExtended")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A type are the list of contracts and their connectors.  Should be ",(0,r.kt)("inlineCode",{parentName:"td"},"ReturnType<loadAppContractConnectors>"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"loadAppContractConnectors")," is the function that returns the contract connectors config.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractsTypes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"BaseContract"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractsTypes"),">"," & { ",(0,r.kt)("inlineCode",{parentName:"td"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"loadAppContractConnectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that returns a list of app contract connectors. See ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/release/packages/vite-app-ts/src/config/appContracts.config.ts"},"this for an example"))))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A context for contracts, hook to access contracts, hook to load contracts, hook to connect to contracts in a network"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ContractsAppContext")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FC"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"PropsWithChildren"),"<",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/ContractAppContext#tcontractscontextprops"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractsContextProps")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#### Summary This is the context for contracts that lets you access your contracts anywhere in your app.  You need to wrap your app in it.  ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/release/packages/vite-app-ts/src/App.tsx"},"See this example"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useAppContractsActions")),(0,r.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/ContractAppContext#tcontractscontextactions"},(0,r.kt)("inlineCode",{parentName:"a"},"TContractsContextActions")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useAppContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"<GContractName",">","(",(0,r.kt)("inlineCode",{parentName:"td"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GContractName"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"chainId"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#ttypedcontract"},(0,r.kt)("inlineCode",{parentName:"a"},"TTypedContract")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractName"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#### Summary This hook allows you to get the contracts attached to a particular network.  ##### \u270f\ufe0f Notes To be used with {@link useConnectAppContracts} which needs to be called in your app to connect to the contracts in a particular network.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useLoadAppContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"#### Summary This hook needs to be called in your app to load all your app contracts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useConnectAppContracts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"adaptor"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersAdaptor")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"#### Summary This hook needs to be called in your app to connect your app to a network")))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractsContextFactory.tsx#L108"},"context/contracts-app/contractsContextFactory.tsx:108")),(0,r.kt)("h2",{id:"misc"},"Misc"),(0,r.kt)("h3",{id:"tcontractscontextactions"},"TContractsContextActions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TContractsContextActions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GAppConnectorList"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"))))),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"connectToAllContractsAction")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"appContractConnectorList"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ethersAdaptor"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersAdaptor")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"connectToContractAction")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"contractName"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ethersAdaptor"),": ",(0,r.kt)("a",{parentName:"td",href:"/eth-hooks/docs/api/modules/Models#tethersadaptor"},(0,r.kt)("inlineCode",{parentName:"a"},"TEthersAdaptor")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setContractConnectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"appContractConnectorList"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addContractConnectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"appContractConnectorList"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dispatch")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Dispatch"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TActions"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"GContractNames"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"GAppConnectorList"),">",">")))),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/a171876/src/context/contracts-app/contractsContextFactory.tsx#L79"},"context/contracts-app/contractsContextFactory.tsx:79")))}m.isMDXComponent=!0}}]);